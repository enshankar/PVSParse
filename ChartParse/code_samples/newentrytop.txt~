newentry(len, G, (s: strings(len)), (start: upto(len)), (rootnt: non_terminal))(St : ne_state(len, G, s, start, rootnt)):
   finer_entry(len, G, s, St`scaf, St`stack, pos(St`stack), nt(St`stack))
   =
    (LET pos = pos(St`stack),
         cur = nt(St`stack),
         rest = St`scaf(pos)(cur)
     IN CASES G(cur) OF
         epsilon: good(0, 0),
         failure: fail(0),
         any(p): ...
         terminal(a): ...
         concat(n1, n2): ...,
	    choice(n1, n2): ...,
	    check(n1): ...,
	    neg(n1): ...
        ENDCASES)
