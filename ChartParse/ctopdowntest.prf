(ctopdowntest
 (pyaml_TCC1 0
  (pyaml_TCC1-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "1" "non_terminal")))
 (pyaml_TCC2 0
  (pyaml_TCC2-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "3" "non_terminal")))
 (pyaml_TCC3 0
  (pyaml_TCC3-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "2" "non_terminal")))
 (pyaml_TCC4 0
  (pyaml_TCC4-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil))
   nil (pyaml subtype "1" "non_terminal")))
 (pyaml_TCC5 0
  (pyaml_TCC5-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "4" "non_terminal")))
 (pyaml_TCC6 0
  (pyaml_TCC6-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "35" "non_terminal")))
 (pyaml_TCC7 0
  (pyaml_TCC7-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "5" "non_terminal")))
 (pyaml_TCC8 0
  (pyaml_TCC8-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "11" "non_terminal")))
 (pyaml_TCC9 0
  (pyaml_TCC9-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "6" "non_terminal")))
 (pyaml_TCC10 0
  (pyaml_TCC10-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (pyaml_TCC11 0
  (pyaml_TCC11-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "8" "non_terminal")))
 (pyaml_TCC12 0
  (pyaml_TCC12-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "10" "non_terminal")))
 (pyaml_TCC13 0
  (pyaml_TCC13-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "9" "non_terminal")))
 (pyaml_TCC14 0
  (pyaml_TCC14-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (pyaml_TCC15 0
  (pyaml_TCC15-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "12" "non_terminal")))
 (pyaml_TCC16 0
  (pyaml_TCC16-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "14" "non_terminal")))
 (pyaml_TCC17 0
  (pyaml_TCC17-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (pyaml_TCC18 0
  (pyaml_TCC18-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "13" "non_terminal")))
 (pyaml_TCC19 0
  (pyaml_TCC19-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "15" "non_terminal")))
 (pyaml_TCC20 0
  (pyaml_TCC20-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "31" "non_terminal")))
 (pyaml_TCC21 0
  (pyaml_TCC21-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "16" "non_terminal")))
 (pyaml_TCC22 0
  (pyaml_TCC22-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "28" "non_terminal")))
 (pyaml_TCC23 0
  (pyaml_TCC23-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "1" "non_terminal")))
 (pyaml_TCC24 0
  (pyaml_TCC24-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "17" "non_terminal")))
 (pyaml_TCC25 0
  (pyaml_TCC25-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "18" "non_terminal")))
 (pyaml_TCC26 0
  (pyaml_TCC26-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (pyaml_TCC27 0
  (pyaml_TCC27-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "19" "non_terminal")))
 (pyaml_TCC28 0
  (pyaml_TCC28-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "25" "non_terminal")))
 (pyaml_TCC29 0
  (pyaml_TCC29-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "21" "non_terminal")))
 (pyaml_TCC30 0
  (pyaml_TCC30-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "25" "non_terminal")))
 (pyaml_TCC31 0
  (pyaml_TCC31-1 nil 3803246409 ("" (subtype-tcc) nil nil) nil nil
   (pyaml subtype "22" "non_terminal")))
 (pyaml_TCC32 0
  (pyaml_TCC32-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "20" "non_terminal")))
 (pyaml_TCC33 0
  (pyaml_TCC33-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "23" "non_terminal")))
 (pyaml_TCC34 0
  (pyaml_TCC34-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "19" "non_terminal")))
 (pyaml_TCC35 0
  (pyaml_TCC35-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "19" "non_terminal")))
 (pyaml_TCC36 0
  (pyaml_TCC36-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (pyaml_TCC37 0
  (pyaml_TCC37-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "24" "non_terminal")))
 (pyaml_TCC38 0
  (pyaml_TCC38-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "26" "non_terminal")))
 (pyaml_TCC39 0
  (pyaml_TCC39-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "27" "non_terminal")))
 (pyaml_TCC40 0
  (pyaml_TCC40-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "20" "non_terminal")))
 (pyaml_TCC41 0
  (pyaml_TCC41-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "29" "non_terminal")))
 (pyaml_TCC42 0
  (pyaml_TCC42-1 nil 3803246409 ("" (subtype-tcc) nil nil) nil nil
   (pyaml subtype "0" "non_terminal")))
 (pyaml_TCC43 0
  (pyaml_TCC43-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "30" "non_terminal")))
 (pyaml_TCC44 0
  (pyaml_TCC44-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (pyaml_TCC45 0
  (pyaml_TCC45-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "32" "non_terminal")))
 (pyaml_TCC46 0
  (pyaml_TCC46-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "12" "non_terminal")))
 (pyaml_TCC47 0
  (pyaml_TCC47-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "33" "non_terminal")))
 (pyaml_TCC48 0
  (pyaml_TCC48-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "14" "non_terminal")))
 (pyaml_TCC49 0
  (pyaml_TCC49-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "34" "non_terminal")))
 (pyaml_TCC50 0
  (pyaml_TCC50-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (pyaml_TCC51 0
  (pyaml_TCC51-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "36" "non_terminal")))
 (pyaml_TCC52 0
  (pyaml_TCC52-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "38" "non_terminal")))
 (pyaml_TCC53 0
  (pyaml_TCC53-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "37" "non_terminal")))
 (pyaml_TCC54 0
  (pyaml_TCC54-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (pyaml_TCC55 0
  (pyaml_TCC55-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "39" "non_terminal")))
 (pyaml_TCC56 0
  (pyaml_TCC56-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "43" "non_terminal")))
 (pyaml_TCC57 0
  (pyaml_TCC57-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "40" "non_terminal")))
 (pyaml_TCC58 0
  (pyaml_TCC58-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "10" "non_terminal")))
 (pyaml_TCC59 0
  (pyaml_TCC59-1 nil 3803246409 ("" (subtype-tcc) nil nil) nil nil
   (pyaml subtype "0" "non_terminal")))
 (pyaml_TCC60 0
  (pyaml_TCC60-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "41" "non_terminal")))
 (pyaml_TCC61 0
  (pyaml_TCC61-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "42" "non_terminal")))
 (pyaml_TCC62 0
  (pyaml_TCC62-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "10" "non_terminal")))
 (pyaml_TCC63 0
  (pyaml_TCC63-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "33" "non_terminal")))
 (pyaml_TCC64 0
  (pyaml_TCC64-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "40" "non_terminal")))
 (pyaml_TCC65 0
  (pyaml_TCC65-1 nil 3803246409 ("" (grind) nil nil)
   ((exp2 def-decl "posnat" exp2 nil)) nil
   (pyaml subtype "44" "non_terminal")))
 (pyaml_TCC66 0
  (pyaml_TCC66-1 nil 3803246409 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (exp2 def-decl "posnat" exp2 nil)
    (non_terminal type-eq-decl nil ctopdown nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "above(n)" exp2 nil))
   nil (pyaml subtype "7" "non_terminal")))
 (cat_TCC1 0
  (cat_TCC1-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (cat subtype "(number_fields.-)(exp2.exp2(8), ctopdowntest.l1)"
        "nat")))
 (cat_TCC2 0
  (cat_TCC2-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (cat subtype "ctopdowntest.l1" "uint32")))
 (cat_TCC3 0
  (cat_TCC3-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (cat subtype "ctopdowntest.l2" "uint32")))
 (cat_TCC4 0
  (cat_TCC4-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (cat subtype "(number_fields.+)(ctopdowntest.l1, ctopdowntest.l2)"
        "uint32")))
 (cat_TCC5 0
  (cat_TCC5-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (cat subtype "(number_fields.-)(ctopdowntest.i, ctopdowntest.l1)"
        "naturalnumbers.below(ctopdowntest.l2)")))
 (tok0_TCC1 0
  (tok0_TCC1-1 nil 3803251633 ("" (cond-coverage-tcc) nil nil) nil nil
   (tok0 coverage
         "COND ctopdowntest.i = 0 -> 39, ctopdowntest.i = 1 -> 116, ctopdowntest.i = 2 -> 111, ctopdowntest.i = 3 -> 107, ctopdowntest.i = 4 -> 101, ctopdowntest.i = 5 -> 110, ctopdowntest.i = 6 -> 39 ENDCOND"
         "nil")))
 (tok1_TCC1 0
  (tok1_TCC1-1 nil 3803251633 ("" (cond-coverage-tcc) nil nil) nil nil
   (tok1 coverage
    "COND ctopdowntest.i = 0 -> 39, ctopdowntest.i = 1 -> 116, ctopdowntest.i = 2 -> 111, ctopdowntest.i = 3 -> 107, ctopdowntest.i = 4 -> 101, ctopdowntest.i = 5 -> 110, ctopdowntest.i = 6 -> 92, ctopdowntest.i = 7 -> 39, ctopdowntest.i = 8 -> 39 ENDCOND"
    "nil")))
 (obrace_TCC1 0
  (obrace_TCC1-1 nil 3803251633 ("" (cond-coverage-tcc) nil nil) nil
   nil
   (obrace coverage
           "COND ctopdowntest.i = 0 -> 32, ctopdowntest.i = 1 -> 123, ctopdowntest.i = 2 -> 32 ENDCOND"
           "nil")))
 (emptydict2_TCC1 0
  (emptydict2_TCC1-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (emptydict2 subtype "9" "uint32")))
 (emptydict2_TCC2 0
  (emptydict2_TCC2-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (emptydict2 subtype "3" "uint8")))
 (emptydict2_TCC3 0
  (emptydict2_TCC3-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (emptydict2 subtype "3"
               "naturalnumbers.below((number_fields.-)(exp2.exp2(8), 3))")))
 (emptydict2_TCC4 0
  (emptydict2_TCC4-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (emptydict2 subtype "6"
               "naturalnumbers.below((number_fields.-)(exp2.exp2(8), 3))")))
 (dict1_TCC1 0
  (dict1_TCC1-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (dict1 subtype "18" "uint32")))
 (dict1_TCC2 0
  (dict1_TCC2-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (dict1 subtype "ctopdowntest.tok0" "ctopdown.strings(3)")))
 (dict1_TCC3 0
  (dict1_TCC3-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (dict1 subtype "9"
          "naturalnumbers.below((number_fields.-)(exp2.exp2(8), 3))")))
 (dict1_TCC4 0
  (dict1_TCC4-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (dict1 subtype "12"
          "naturalnumbers.below((number_fields.-)(exp2.exp2(8), 3))")))
 (dict1_TCC5 0
  (dict1_TCC5-1 nil 3803251633 ("" (subtype-tcc) nil nil) nil nil
   (dict1 subtype "15"
          "naturalnumbers.below((number_fields.-)(exp2.exp2(8), 3))")))
 (test0_TCC1 0
  (test0_TCC1-1 nil 3803256917 ("" (subtype-tcc) nil nil) nil nil
   (test0 subtype "2" "uint8")))
 (test0_TCC2 0
  (test0_TCC2-1 nil 3803256917 ("" (subtype-tcc) nil nil) nil nil
   (test0 subtype "7" "non_terminal")))
 (test0eval 0
  (test0eval-1 nil 3803256918 ("" (grind) nil nil)
   ((step const-decl "state(len, G, s, start, root)" ctopdown nil)
    (pyaml const-decl "peg" ctopdowntest nil)
    (instack def-decl "bool" ctopdown nil)
    (putstack const-decl "state(len, G, s, pos, root)" ctopdown nil)
    (empty const-decl "byte" ctopdowntest nil)
    (parse def-decl "endstate(len, G, s)" ctopdown nil)
    (doparse const-decl "ent" ctopdown nil)
    (test0 const-decl "ent" ctopdowntest nil))
   shostak))
 (test1_TCC1 0
  (test1_TCC1-1 nil 3803256917 ("" (subtype-tcc) nil nil) nil nil
   (test1 subtype "17" "non_terminal")))
 (test2_TCC1 0
  (test2_TCC1-1 nil 3803256917 ("" (subtype-tcc) nil nil) nil nil
   (test2 subtype "0" "non_terminal")))
 (test2eval 0
  (test2eval-1 nil 3803269679
   ("" (auto-rewrite-theory ctopdowntest)
    (("" (auto-rewrite-theory "ctopdown")
      (("" (stop-rewrite "step")
        (("" (assert)
          (("" (expand step)
            (("" (assert)
              (("" (expand step)
                (("" (assert)
                  (("" (expand step)
                    (("" (assert)
                      (("" (expand step)
                        (("" (assert)
                          (("" (expand step)
                            (("" (assert) (("" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)))

