(define nrem_1::(-> int int int)) 
(define exp2_2::(-> real int)) 
(define even?_3::(-> real bool)) 
(define i_4::int) 
(define len_5::int) 
(define odd?_6::(-> real bool)) 
(define q_7::int) 
(define hX_8::(tuple int (-> real int) )) 
(define hexdigit?_9::(-> real bool)) 
(define get_10::(-> (tuple int (-> real int) ) int int)) 
(define ndiv_11::(-> int int int)) 
(define twoi_12::int) 
(assert (<=  twoi_12 (-  (exp2_2  32) 1))) 
(assert (>  (exp2_2  32) 32)) 
(assert (even?_3  32)) 
(assert (>  32 0)) 
(assert (odd?_6  4294967295)) 
(assert (>  4294967295 0)) 
(assert (even?_3  (*  2 (ndiv_11  (+  1 (select hX_8 1)) 2)))) 
(assert (<=  (ndiv_11  (+  1 (select hX_8 1)) 2) (+  1 (select hX_8 1)))) 
(assert (=  (+  1 (select hX_8 1)) (+  (*  2 (ndiv_11  (+  1 (select hX_8 1)) 2)) (mod
                                                (+  1 (select hX_8 1))
                                                2)))) 
(assert (even?_3  (*  2 (ndiv_11  (+  1 (select hX_8 1)) 2)))) 
(assert (exists ( q_33::int) (=  (+  1 (select hX_8 1)) (+  (*  2 q_33) (mod (+  1 (select hX_8 1)) 2))))) 
(assert (even?_3  (*  2 q_33))) 
(assert (<  (mod (+  1 (select hX_8 1)) 2) 2)) 
(assert (>  (+  1 (select hX_8 1)) 0)) 
(assert (<  (select hX_8 1) 4294967296)) 
(assert (forall ( i_32::int) (hexdigit?_9  (get_10  hX_8 i_32)))) 
(assert (<  (get_10  hX_8 i_32) 256)) 
(assert (even?_3  256)) 
(assert (>  256 0)) 
(assert (<=  256 (-  (exp2_2  16) 1))) 
(assert (>  (exp2_2  16) 16)) 
(assert (even?_3  16)) 
(assert (>  16 0)) 
(assert (<  i_32 (select hX_8 1))) 
(assert (<  (select hX_8 1) 4294967296)) 
(assert (even?_3  (*  4294967296 q_7))) 
(assert (exists ( q_8::int) (=  (*  2 i_4) (+  (*  4294967296 q_8) (nrem_1  (*  2 i_4) 4294967296))))) 
(assert (even?_3  (*  4294967296 q_8))) 
(assert (<  (nrem_1  (*  2 i_4) 4294967296) 4294967296)) 
(assert (even?_3  4294967296)) 
(assert (>  4294967296 0)) 
(assert (<=  4294967296 (-  (exp2_2  64) 1))) 
(assert (odd?_6  1)) 
(assert (>  1 0)) 
(assert (>  (exp2_2  64) 64)) 
(assert (even?_3  64)) 
(assert (>  64 0)) 
(assert (even?_3  (*  2 i_4))) 
(assert (<  i_4 len_5)) 
(assert (even?_3  2)) 
(assert (>  2 0)) 
(assert (<  2 (exp2_2  8))) 
(assert (>  (exp2_2  8) 8)) 
(assert (even?_3  8)) 
(assert (>  8 0)) 
(assert (even?_3  0)) 
(assert (<  (nrem_1  (*  2 i_4) 4294967296) 4294967296)) 
(assert (=  (*  2 i_4) (+  (nrem_1  (*  2 i_4) 4294967296) (*  4294967296 q_7)))) 
(assert (=  (+  1 (select hX_8 1)) (+  (mod (+  1 (select hX_8 1))
         2) (*  2 (ndiv_11  (+  1 (select hX_8 1)) 2))))) 
(assert (<=  (ndiv_11  (+  1 (select hX_8 1)) 2) (+  1 (select hX_8 1)))) 
(assert (not (=  (select hX_8 1) 4294967295))) 
(assert (=  len_5 (ndiv_11  (+  1 (select hX_8 1)) 2))) 
(assert (<  i_4 (ndiv_11  (+  1 (select hX_8 1)) 2))) 
(assert (=  twoi_12 (nrem_1  (*  2 i_4) 4294967296))) 
(assert (<=  1 (-  4294967295 (nrem_1  (*  2 i_4) 4294967296)))) 
(assert (not (<  (nrem_1  (*  2 i_4) 4294967296) (select hX_8 1)))) 
(check)
