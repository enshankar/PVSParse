(define ux8!1_1::int) 
(define exp2_2::(-> real int)) 
(define even?_3::(-> real bool)) 
(define odd?_4::(-> real bool)) 
(define uy8!1_5::int) 
(assert (odd?_4  65535)) 
(assert (>  65535 0)) 
(assert (<=  65535 (-  (exp2_2  32) 1))) 
(assert (>  (exp2_2  32) 32)) 
(assert (even?_3  32)) 
(assert (>  32 0)) 
(assert (<  uy8!1_5 (exp2_2  8))) 
(assert (even?_3  256)) 
(assert (>  256 0)) 
(assert (<=  256 (-  (exp2_2  16) 1))) 
(assert (odd?_4  1)) 
(assert (>  1 0)) 
(assert (>  (exp2_2  16) 16)) 
(assert (even?_3  16)) 
(assert (>  16 0)) 
(assert (<  ux8!1_1 (exp2_2  8))) 
(assert (>  (exp2_2  8) 8)) 
(assert (even?_3  8)) 
(assert (>  8 0)) 
(assert (even?_3  0)) 
(assert (<  ux8!1_1 256)) 
(assert (<  uy8!1_5 256)) 
(assert (not (<=  (*  ux8!1_1 uy8!1_5) 65535))) 
(check)
